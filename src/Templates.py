class Template:

    def requiredImports(self):
        return f''
    ################################################################
    ################################################################
    #                           functio                             #
    ################################################################
    ################################################################
    
    ################################################################
    ################################################################
    #                           IMPORT                             #
    ################################################################
    ################################################################

    ################################################################
    ################################################################
    #                         FUNCTION                             #
    ################################################################
    ################################################################
    def mainLilith(self, arguments, inside):
        function = f'void _MaInLiLith_({arguments})\n{{\n{inside}\n}}\n'
        return function

   
    ################################################################
    ################################################################
    #                         FUNCTION                             #
    ################################################################
    ################################################################



    ################################################################
    ################################################################
    #                        CONDITIONAL                           #
    ################################################################
    ################################################################
    
    ################################################################
    ################################################################
    #                        CONDITIONAL                           #
    ################################################################
    ################################################################




    ################################################################
    ################################################################
    #                         VARIABLE                             #
    ################################################################
    ################################################################
    def variable(self, identifier, type, value):
        return f'{type} {identifier} = {value};\n'
    ################################################################
    ################################################################
    #                         VARIABLE                             #
    ################################################################
    ################################################################


    ################################################################
    ################################################################
    #                           VALUES                             #
    ################################################################
    ################################################################

    ################################################################
    ################################################################
    #                           VALUES                             #
    ################################################################
    ################################################################