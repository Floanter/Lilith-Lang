start               : block+

block               : assign
                    | conditional
                    | "pass" ";"


assign              : type identifier "->" "(" ")" block+ "end" -> function
                    | type identifier "->" value ";" -> variable
                    | "const" type identifier "->" value ";" -> constvariable

conditional         : "if" value (operator value)+ "then" block+ "end"

identifier          : WORD -> identifier
type                : WORD -> type

value               : string
                    | number
                    | bool
                    | arithmetic
                    | identifier

arithmetic          : value (arithmeticsign value)+

arithmeticsign      : "+" -> plus
                    | "-" -> minus
                    | "/" -> divide
                    | "*" -> multiply

string              : /\'.*\'/ 
                    | /\".*\"/

number              : SIGNED_NUMBER
                    | SIGNED_FLOAT

bool                : /true/
                    | /false/

COMMENT             : "--" /[^\n]/*

%import common.SIGNED_NUMBER
%import common.SIGNED_FLOAT
%import common.ESCAPED_STRING
%import common.WORD
%import common.WS

%ignore COMMENT
%ignore WS